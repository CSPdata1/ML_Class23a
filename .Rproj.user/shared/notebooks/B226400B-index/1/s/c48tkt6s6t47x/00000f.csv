"0","from sklearn.preprocessing import PolynomialFeatures"
"0",""
"0","# Generating synthetic data with a quadratic relationship"
"0","y_nonlinear = 1 + 2 * X + 0.5 * X**2 + np.random.randn(100, 1)"
"0",""
"0","# Transforming features to include quadratic term"
"0","poly_features = PolynomialFeatures(degree=2, include_bias=False)"
"0","X_poly = poly_features.fit_transform(X)"
"0",""
"0","# Splitting the data into training and testing sets"
"0","X_poly_train, X_poly_test, y_poly_train, y_poly_test = train_test_split(X_poly, y_nonlinear, test_size=0.2, random_state=42)"
"0",""
"0","# Creating and training the linear regression model with quadratic features"
"0","lin_reg_nonlinear = LinearRegression()"
"0","lin_reg_nonlinear.fit(X_poly_train, y_poly_train)"
"1","LinearRegression()
"
"0","# Making predictions on the test set"
"0","y_poly_pred = lin_reg_nonlinear.predict(X_poly_test)"
"0",""
