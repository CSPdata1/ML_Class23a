"0","# Example code for Confusion Matrix, ROC Curve, and Precision-Recall Curve"
"0","from sklearn.metrics import confusion_matrix, roc_curve, precision_recall_curve, auc"
"0","import matplotlib.pyplot as plt"
"0","import matplotlib.pyplot as plt"
"0","import numpy as np"
"0","import pandas as pd"
"0","import seaborn as sns"
"0",""
"0",""
"0","# Confusion Matrix"
"0","cm = confusion_matrix(y_test, y_pred)"
"0","plt.figure(figsize=(8, 6))"
"1","<Figure size 800x600 with 0 Axes>
"
"0","sns.heatmap(cm, annot=True, fmt='g', cmap='Blues')"
"1","<Axes: >
"
"0","plt.title('Confusion Matrix')"
"1","Text(0.5, 1.0, 'Confusion Matrix')
"
"0","plt.xlabel('Predicted')"
"1","Text(0.5, 36.72222222222221, 'Predicted')
"
"0","plt.ylabel('Actual')"
"1","Text(70.72222222222221, 0.5, 'Actual')
"
"0","plt.show()"
"0",""
"0","# ROC Curve"
"0","fpr, tpr, _ = roc_curve(y_test, model.predict_proba(X_test)[:,1])"
"0","roc_auc = auc(fpr, tpr)"
"0","plt.figure(figsize=(8, 6))"
"0","plt.plot(fpr, tpr, color='darkorange', lw=2, label=f'ROC curve (area = {roc_auc:.2f})')"
"1","<Figure size 800x600 with 0 Axes>
"
"1","[<matplotlib.lines.Line2D object at 0x130748990>]
"
"0","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')"
"1","[<matplotlib.lines.Line2D object at 0x13067da10>]
"
"0","plt.xlabel('False Positive Rate')"
"1","Text(0.5, 0, 'False Positive Rate')
"
"0","plt.ylabel('True Positive Rate')"
"1","Text(0, 0.5, 'True Positive Rate')
"
"0","plt.title('Receiver Operating Characteristic (ROC) Curve')"
"1","Text(0.5, 1.0, 'Receiver Operating Characteristic (ROC) Curve')
"
"0","plt.legend(loc='lower right')"
"1","<matplotlib.legend.Legend object at 0x130661e10>
"
"0","plt.show()"
